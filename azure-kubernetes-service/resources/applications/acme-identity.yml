apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ConfigMap 
  metadata:
    name: identity-config
    namespace: default
  data:
    EUREKA_CLIENT_ENABLED: 'true'
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: identity
    namespace: default
  spec:
    progressDeadlineSeconds: 900
    replicas: 1
    revisionHistoryLimit: 0
    selector:
      matchLabels:
        app: identity
    strategy:
      rollingUpdate:
        maxSurge: "0%"
        maxUnavailable: "25%"
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
        labels:
          app: identity
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: JAVA_OPTS
            value: -Deureka.client.service-url.defaultZone=$(SPRING_EUREKA_SERVICE_URL)
              -Dfile.encoding=UTF8 -DCONFIG_SERVER_URL=$(SPRING_CLOUD_CONFIG_URI) -Dspring.cloud.config.uri=$(SPRING_CLOUD_CONFIG_URI)
              -Dspring.cloud.config.fail-fast=$(SPRING_CLOUD_CONFIG_FAILFAST) -Dspring.config.import=optional:configserver:$(SPRING_CLOUD_CONFIG_URI)/
          - name: SERVER_PORT
            value: '8080'
          - name: APPLICATIONINSIGHTS_ROLE_NAME
            value: identity
          - name: JWK_SET_URI
            value: $(JWK_SET_URI)
          envFrom:
          - configMapRef:
              name: config-server-config
              optional: true
          - configMapRef:
              name: eureka-server-config
              optional: true
          - configMapRef:
              name: identity-config
          image: acmeacr.azurecr.io/acme-identity:buildpack
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 3
          name: identity
          ports:
          - containerPort: 8080
            name: app-port
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              ephemeral-storage: "5000Mi"
              memory: "4Gi"
            requests:
              cpu: "2"
              ephemeral-storage: "5000Mi"
              memory: "4Gi"
          volumeMounts:
          - mountPath: /tmp
            name: temp
        terminationGracePeriodSeconds: 90
        volumes:
        - emptyDir:
            sizeLimit: "5Gi"
          name: temp
- apiVersion: v1
  kind: Service
  metadata:
    name: identity
    namespace: default
  spec:
    selector:
      app: identity
    ports:
      - protocol: TCP
        port: 80
        targetPort: 8080
    type: ClusterIP
