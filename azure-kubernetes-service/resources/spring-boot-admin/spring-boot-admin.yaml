apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-admin
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: spring-boot-admin
  strategy:
    rollingUpdate:
      maxSurge: 55%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: spring-boot-admin
    spec:
      containers:
      - env:
          - name: JAVA_OPTS
            value: -Deureka.client.service-url.defaultZone=$(SPRING_EUREKA_SERVICE_URL)
        envFrom:
        - configMapRef:
            name: eureka-server-config
            optional: true
        image: <acr-name>.azurecr.io/spring-boot-admin:<spring-boot-admin-image-tag>
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 3
        name: spring-boot-admin
        ports:
        - containerPort: 8080
          name: app-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 3
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 5000Mi
            memory: 1Gi
          requests:
            cpu: "1"
            ephemeral-storage: 5000Mi
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - NET_RAW
          privileged: false
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-admin
  namespace: default
spec:
  selector:
    app: spring-boot-admin
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.azure.com/tls-cert-keyvault-uri: https://<keyvault-name>.vault.azure.net/certificates/<tls-cert-name>
  name: spring-boot-admin-ingress
  namespace: default
spec:
  ingressClassName: webapprouting.kubernetes.azure.com
  rules:
  - host: <spring-boot-admin-host>
    http:
      paths:
      - backend:
          service:
            name: spring-boot-admin
            port:
              number: 8080
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - <spring-boot-admin-host>
    # Secret name should be the in patthen "keyvault-<metadata.name>"
    secretName: keyvault-spring-boot-admin-ingress